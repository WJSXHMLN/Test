用户登录
    1.数据库创建对应的用户表  tb_user  (Mysql)

    2.前台页面
            登录页面 login.jsp
                用户登录 JS校验
                    登录表单验证
                    1.给登录按钮绑定点击事件
                    2.获取用户姓名和密码值
                    3.判断姓名是否为空
                        姓名为空，(span赋值) 提示用户 并且 return
                    4.判断密码是否为空
                        密码为空，(span赋值) 提示用户 并且 return
                    5.如果都不为空，手动提交表单。

            成功首页    index.jsp  （登录成功页面）

    3.后台实现
            登录功能
                思路：
                   1.接收客户端的请求 （接受参数：用户名 、密码）
                   2.避免前台错误，后台还是要进行    参数的非空判断
                        如果参数为空： 失败了 + 为什么失败（通过消息模型对象，返回数据返回结果）
                                （设置成功状态、设置提示信息、回显数据）,
                                 将消息模型对象设置到request作用域，
                                 请求转发跳转到登录页面
                                 return
                        如果参数不为空
                              用户名和密码查询
                              或先用用户名查，查出用户记录，将用户记录中的密码与前台传过来的密码比对
                   3.通过用户姓名查询用户对象   （通过用户名查询用户对象）
                   4.判断用户对象是否为空
                            如果为空，通过消息模型，返回对象结果 （设置成功状态、设置提示信息、回显数据）
                                          将消息模型对象设置到request作用域，
                                          请求转发跳转到登录页面
                                          return
                   5.将数据库中查的密码与前台密码比
                            不等则失败，
                                通过消息模型对象返回消息结果
                                将消息模型对象设置到request作用域中
                                请求转发跳转回原来的登录页面
                            相等则登录成功
                                    将用户信息设置到session作用域中
                                    重定向转到首页

             分层：
                        controller  （接受请求，响应结果）
                                1.接受客户端的请求（接受参数：姓名，密码）
                                2.调用service层的方法，返回消息模型对象
                                3.判断消息模型状态码
                                      如果状态码失败
                                        将消息模型对象设置到request作用域中,请求转发跳转到登录页面login.jsp
                                      如果状态码成功
                                        将消息模型中的用户信息设置到session作用域中，重定向跳转到index.jsp



                        service (业务逻辑)
                                1.参数的非空判断
                                    如果为空，将状态码、提示信息、回显数据设置到消息模型对象中，返回消息模型对象

                                2.调用dao层的查询方法，通过用户名查询用户对象

                                3.判断用户对象是否为空
                                    如果为空，将状态码、提示信息、回显数据设置到消息模型对象中，返回消息模型对象

                                4.判断数据库中查询到的用户密码与前台传递过来的用户密码
                                    不等，则将状态码、提示信息、回显数据设置到消息模型对象中，返回消息模型对象

                                5.登录成功
                                        将成功状态码、提示信息、用户对象 设置到消息模型对象中，并返回




                        dao（mapper)
                                定义对应的接口








    分层思想：  高内聚低耦合
        controller层
                接受请求
                 （调用service层,返回结果)
                响应结果
        service层
                业务逻辑判断
        dao/mapper
            接口类
            mapper.xml  mybatis与数据库的操作
        entity(po model)
            javaBean实体

        util
            工具类  （通用的方法 类 ）
        test
            测试方法、类


    集成mybatis



